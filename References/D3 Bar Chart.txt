var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = pbi.width - margin.left - margin.right,   // ALTER: Changed fixed width with the 'pbi.width' variable
    height = pbi.height - margin.top - margin.bottom; // ALTER: Changed fixed height with the 'pbi.height' variable

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], 0.1, 0.2);

var y = d3.scale.linear()
    .range([height, 0]);

var svg = d3.select("#chart")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

// ALTER: Replaced the d3.tsv function with the pbi variant: pbi.dsv
pbi.dsv(type, function(letters) {
    x.domain(letters.map(function(d) { return d.product; }));
    y.domain([0, d3.max(letters, function(d) { return d.revenue; })]);

    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(d3.svg.axis().scale(x).orient("bottom"));

    svg.append("g")
        .attr("class", "y axis")
        .call(d3.svg.axis().scale(y).orient("left"));

    svg.selectAll(".bar")
        .data(letters)
        .enter()
        .append("rect")
        .style("fill", pbi.colors[0]) // First color of provided color array
        .attr("x", function(d) { return x(d.product); })
        .attr("width", x.rangeBand())
        .attr("y", function(d) { return y(d.revenue); })
        .attr("height", function(d) { return height - y(d.revenue); });
});

function type(d) {
	d.frequency = +d.frequency;
	return d;
}